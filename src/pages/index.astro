---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";

const talks = await getCollection("talks");

const sessionStartTimes = [
  "09:00",
  "09:20",
  "10:15",
  "11:10",
  "11:45",
  "12:45",
  "13:45",
  "14:45",
  "16:00",
].map((time) => {
  return new Date(`2025-05-22T${time}`);
});

const groups = Object.groupBy(talks, (talk) => {
  const time = new Date(`2025-05-22T${talk.data.time}`);
  return sessionStartTimes
    .find((startTime, i, a) => {
      return time >= startTime && time < a[i + 1];
    })
    ?.toLocaleTimeString([], {
      hour: "2-digit",
      minute: "2-digit",
      hour12: false,
    });
});

function addMinutes(date: Date, minutes: number) {
  return new Date(date.getTime() + minutes * 60 * 1000);
}

const roomOrder = ["Rom 1", "Rom 2", "Fellesarealet"];
---

<Layout>
  <main>
    <h1>Velkommen til fagdag for offentlig sektor!</h1>
    {
      Object.entries(groups)
        .sort(
          ([a], [b]) =>
            new Date(`2025-05-22T${a}`).getTime() -
            new Date(`2025-05-22T${b}`).getTime()
        )
        .map(([time, talks]) => (
          <section>
            <h2>
              {time}
              {talks.length === 1 &&
                talks[0].data.title === "Lunsj" &&
                " Lunsj"}
            </h2>
            {talks[0].data.title !== "Lunsj" && (
              <div class="list">
                {Object.entries(
                  Object.groupBy(talks, (talk) => talk.data.location)
                )
                  .sort(
                    ([a], [b]) => roomOrder.indexOf(a) - roomOrder.indexOf(b)
                  )
                  .map(([location, talks]) => (
                    <div
                      class={[
                        "room",
                        location.toLowerCase().replaceAll(" ", "-"),
                      ].join(" ")}
                    >
                      <h3>{location}</h3>
                      <div class="talks">
                        {talks
                          ?.sort(
                            (a, b) =>
                              new Date(`2025-05-22T${a.data.time}`).getTime() -
                              new Date(`2025-05-22T${b.data.time}`).getTime()
                          )
                          .map(({ data, slug, body }) => (
                            <div>
                              <div>
                                {`${data.time}-${addMinutes(
                                  new Date(`2025-05-22T${data.time}`),
                                  data.duration
                                ).toLocaleTimeString([], {
                                  hour: "2-digit",
                                  minute: "2-digit",
                                  hour12: false,
                                })}`}{" "}
                                ({data.duration} min)
                              </div>
                              <h4>
                                {body ? (
                                  <a href={`/offentlig-fagdag/${slug}`}>
                                    {data.title}
                                  </a>
                                ) : (
                                  data.title
                                )}
                              </h4>
                              {data.speakers && (
                                <div>
                                  {data.speakers
                                    .map((s) => `${s.name} (${s.employer})`)
                                    .join(", ")}
                                </div>
                              )}
                            </div>
                          ))}
                      </div>
                    </div>
                  ))}
              </div>
            )}
          </section>
        ))
    }
  </main>
</Layout>

<style>
  h2 {
    margin-top: 2rem;
    margin-bottom: 1rem;
  }
  h3 {
    margin: 0;
    margin-bottom: 0.5rem;
  }
  h4 {
    margin: 0;
    margin-bottom: 0.2rem;
    font-size: 1.2rem;
  }
  .list {
    display: grid;
    gap: 0.75rem;
  }
  @media (min-width: 1024px) {
    .list {
      grid-template-columns: repeat(3, 1fr);
    }
  }
  .room {
    border-radius: 0.5rem;
    padding: 1rem;
  }
  .room.rom-1 {
    background-color: #cce1ff;
  }
  .room.rom-2 {
    background-color: #ffc2c2;
  }
  .room.fellesarealet {
    background-color: #ccf1d6;
  }
  .talks {
    display: grid;
    gap: 1rem;
  }
</style>
